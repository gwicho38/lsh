apiVersion: v1
kind: ConfigMap
metadata:
  name: es-index-config
data:
  c3server_index_config.json: |
    {
      "name": "c3server",
      "indextemplate": {
        "template": {
          "settings": {
              "number_of_shards": 4,
              "number_of_replicas": 1,
              "index.refresh_interval": "5s",
              "index.routing.allocation.require.data": "hot",
              "index.lifecycle.name": "c3server",
              "index.lifecycle.rollover_alias": "c3server"
          }
        },
        "index_patterns": [
            "c3server-*"
        ]
      },
      "policytemplate": {
        "policy": {
          "phases": {
            "hot": {
              "actions": {
                "rollover": {
                  "max_size":"30gb"
                },
                "set_priority": {
                  "priority": 100
                }
              }
            },
            "warm": {
              "min_age": "7d",
              "actions": {
                "forcemerge": {
                  "max_num_segments": 1
                },
                "shrink": {
                  "number_of_shards": 2
                },
                "allocate": {
                  "require": {
                    "data": "warm"
                  }
                },
                "set_priority": {
                  "priority": 50
                }
              }
            },
            "delete": {
              "min_age": "14d",
              "actions": {
                "delete": {}
              }
            }
          }
        }
      }
    }
  cassandra_index_config.json: |
    {
      "name": "cassandra",
      "indextemplate": {
        "template": {
          "settings": {
              "number_of_shards": 2,
              "number_of_replicas": 1,
              "index.refresh_interval": "5s",
              "index.routing.allocation.require.data": "hot",
              "index.lifecycle.name": "cassandra",
              "index.lifecycle.rollover_alias": "cassandra"
          }
        },
        "index_patterns": [
          "cassandra-*"
        ]
      },
      "policytemplate": {
        "policy": {
          "phases": {
            "hot": {
              "actions": {
                "rollover": {
                  "max_size":"30gb"
                },
                "set_priority": {
                  "priority": 100
                }
              }
            },
            "warm": {
              "min_age": "7d",
              "actions": {
                "forcemerge": {
                  "max_num_segments": 1
                },
                "shrink": {
                  "number_of_shards": 1
                },
                "allocate": {
                  "require": {
                    "data": "warm"
                  }
                },
                "set_priority": {
                  "priority": 50
                }
              }
            },
            "delete": {
              "min_age": "14d",
              "actions": {
                "delete": {}
              }
            }
          }
        }
      }
    }
  jupyter_index_config.json: |
    {
      "name": "jupyter",
      "indextemplate": {
        "template": {
          "settings": {
              "number_of_shards": 1,
              "number_of_replicas": 1,
              "index.refresh_interval": "5s",
              "index.routing.allocation.require.data": "hot",
              "index.lifecycle.name": "jupyter",
              "index.lifecycle.rollover_alias": "jupyter"
          }
        },
        "index_patterns": [
          "jupyter-*"
        ]
      },
      "policytemplate": {
        "policy": {
          "phases": {
            "hot": {
              "actions": {
                "rollover": {
                  "max_size":"30gb"
                },
                "set_priority": {
                  "priority": 100
                }
              }
            },
            "warm": {
              "min_age": "7d",
              "actions": {
                "forcemerge": {
                  "max_num_segments": 1
                },
                "shrink": {
                  "number_of_shards": 1
                },
                "allocate": {
                  "require": {
                    "data": "warm"
                  }
                },
                "set_priority": {
                  "priority": 50
                }
              }
            },
            "delete": {
              "min_age": "14d",
              "actions": {
                "delete": {}
              }
            }
          }
        }
      }
    }
  postgresql_index_config.json: |
    {
      "name": "postgresql",
      "indextemplate": {
        "template": {
          "settings": {
              "number_of_shards": 1,
              "number_of_replicas": 1,
              "index.refresh_interval": "5s",
              "index.routing.allocation.require.data": "hot",
              "index.lifecycle.name": "postgresql",
              "index.lifecycle.rollover_alias": "postgresql"
          }
        },
        "index_patterns": [
          "postgresql-*"
        ]
      },
      "policytemplate": {
        "policy": {
          "phases": {
            "hot": {
              "actions": {
                "rollover": {
                  "max_size":"30gb"
                },
                "set_priority": {
                  "priority": 100
                }
              }
            },
            "warm": {
              "min_age": "7d",
              "actions": {
                "forcemerge": {
                  "max_num_segments": 1
                },
                "shrink": {
                  "number_of_shards": 1
                },
                "allocate": {
                  "require": {
                    "data": "warm"
                  }
                },
                "set_priority": {
                  "priority": 50
                }
              }
            },
            "delete": {
              "min_age": "14d",
              "actions": {
                "delete": {}
              }
            }
          }
        }
      }
    }
  metricbeat_index_config.json: |
    {
      "name": "metricbeat",
      "indextemplate": {
        "template": {
          "settings": {
              "number_of_shards": 1,
              "number_of_replicas": 1,
              "index.refresh_interval": "5s",
              "index.routing.allocation.require.data": "hot",
              "index.lifecycle.name": "metricbeat",
              "index.lifecycle.rollover_alias": "metricbeat"
          }
        },
        "index_patterns": [
          "metricbeat-*"
        ]
      },
      "policytemplate": {
        "policy": {
          "phases": {
            "hot": {
              "actions": {
                "rollover": {
                  "max_size":"30gb"
                },
                "set_priority": {
                  "priority": 100
                }
              }
            },
            "warm": {
              "min_age": "7d",
              "actions": {
                "forcemerge": {
                  "max_num_segments": 1
                },
                "shrink": {
                  "number_of_shards": 1
                },
                "allocate": {
                  "require": {
                    "data": "warm"
                  }
                },
                "set_priority": {
                  "priority": 50
                }
              }
            },
            "delete": {
              "min_age": "14d",
              "actions": {
                "delete": {}
              }
            }
          }
        }
      }
    }

  nginx_index_config.json: |
    {
      "name": "nginx",
      "indextemplate": {
        "template": {
          "settings": {
              "number_of_shards": 1,
              "number_of_replicas": 1,
              "index.refresh_interval": "5s",
              "index.routing.allocation.require.data": "hot",
              "index.lifecycle.name": "nginx",
              "index.lifecycle.rollover_alias": "nginx"
          }
        },
        "index_patterns": [
          "nginx-*"
        ]
      },
      "policytemplate": {
        "policy": {
          "phases": {
            "hot": {
              "actions": {
                "rollover": {
                  "max_size":"30gb"
                },
                "set_priority": {
                  "priority": 100
                }
              }
            },
            "warm": {
              "min_age": "7d",
              "actions": {
                "forcemerge": {
                  "max_num_segments": 1
                },
                "shrink": {
                  "number_of_shards": 1
                },
                "allocate": {
                  "require": {
                    "data": "warm"
                  }
                },
                "set_priority": {
                  "priority": 50
                }
              }
            },
            "delete": {
              "min_age": "14d",
              "actions": {
                "delete": {}
              }
            }
          }
        }
      }
    }
