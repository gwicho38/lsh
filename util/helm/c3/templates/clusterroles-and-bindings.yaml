{{- if .Values.c3.security.deployClusterRole }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: '{{ .Release.Name }}'
rules:
  - apiGroups: ["rbac.authorization.k8s.io", "storage.k8s.io", "policy", "coordination.k8s.io", "authorization.k8s.io", "apps", "", "authentication.k8s.io", "extensions", "events.k8s.io", "scheduling.k8s.io", "cluster.ray.io", "metrics.k8s.io", "networking.k8s.io", "autoscaling", "monitoring.coreos.com", "batch", "apiextensions.k8s.io", "ops.c3.ai"]
    resources: ["namespaces", "roles", "clusterroles", "clusterrolebindings", "rolebindings", "csinodes", "storageclasses", "poddisruptionbudgets", "replicasets", "leases", "subjectaccessreviews", "tokenreviews", "statefulsets", "bindings", "endpoints", "events", "nodes", "persistentvolumeclaims", "persistentvolumes", "pods", "pods/log", "pods/binding", "pods/exec", "pods/status", "replicationcontrollers", "services", "replicasets", "priorityclasses", "rayclusters", "secrets", "deployments", "ingresses", "horizontalpodautoscalers", "servicemonitors", "serviceaccounts", "networkpolicies", "configmaps", "daemonsets", "jobs", "customresourcedefinitions", "prometheuses", "c3cassandras", "c3postgres", "csidrivers", "csistoragecapacities"]
    verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: '{{ .Release.Name }}'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: '{{ .Release.Name }}'
subjects:
  - kind: ServiceAccount
    name: c3
    namespace: '{{ .Release.Namespace }}'
  - kind: ServiceAccount
    name: default
    namespace: '{{ .Release.Namespace }}'
{{ end }}
