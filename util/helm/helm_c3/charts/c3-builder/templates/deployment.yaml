#
# C3 Builder Pod deployment
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      function: 'builder'
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  revisionHistoryLimit: 1
  progressDeadlineSeconds: 600
  template:
    metadata:
      labels:
        function: 'builder'
    spec:
      hostname: '{{ .Release.Name }}'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 120
      containers:
        - name: 'builder-container'
          image: '{{ .Values.c3Builder.image.registry }}/{{ .Values.c3Builder.image.repository }}:{{ .Values.c3Builder.image.tag }}'
          securityContext:
            runAsUser: {{ .Values.c3Builder.uid }}
            runAsGroup: {{ .Values.c3Builder.gid }}
            allowPrivilegeEscalation: false
          imagePullPolicy: IfNotPresent
          command: ["/bin/bash"]
          args: ["-c", "trap : TERM INT; sleep infinity & wait"]
          resources:
            requests:
              cpu: '2000m'
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8787
              protocol: TCP
            - containerPort: 5005
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            #
            # This is the hostname the builder pod is known as, as far as Selenium pods are concerned. Selenium pods
            # should be able to reach this host, so there should be a headless service with the same name that exposes
            # the pod dynamic IP under a constant DNS name (see service.yaml). 'C3_HOSTNAME' and
            # .spec.template.spec.hostname contain the same value and are somewhat redundant.
            #
          - name: C3_HOSTNAME
            value: '{{ .Release.Name }}'
          - name: DEBUG_IP
            value: 0.0.0.0
          - name: K8S_MODE
            value: 'on'
          - name: POSTGRESQL_HOST
            value: '{{ .Release.Name }}-postgresql.default'
          - name: CASSANDRA_HOST
            value: '{{ .Release.Name }}-cassandra-0.{{ .Release.Name }}-cassandra.default'
          - name: CHROME_SELENIUM_SERVICE
            # defined in Selenium chart, service-chrome.yaml
            value: '{{ .Release.Name }}-selenium-chrome'
          - name: FIREFOX_SELENIUM_SERVICE
            # defined in Selenium chart, service-firefox.yaml
            value: '{{ .Release.Name }}-selenium-firefox'
          volumeMounts:
          - name: 'users'
            mountPath: '/etc/passwd'
            readOnly: true
          - name: 'groups'
            mountPath: '/etc/group'
            readOnly: true
          - name: 'maven-repo'
            mountPath: '{{ .Values.c3Builder.homeDir }}/.m2/repository'
            subPath: 'repository'
          - name: 'sources'
            mountPath: '/src'
          - name: 'sources'
            mountPath: '/usr/local/share/c3/server/config'
            subPath: 'configs/config'
          - name: 'sources'
            mountPath: '/usr/local/share/c3/server/vault'
            subPath: 'configs/vault'
          {{- if .Values.c3Builder.sharedFileSystem.local }}
          - name: 'c3-cluster-shared'
            mountPath: '{{ .Values.c3Builder.sharedFileSystem.mountPath }}'
            subPath: '{{ .Values.c3Builder.sharedFileSystem.subPath }}'
          {{- end }}

      initContainers:
          #
          # The builder pod is not useful until its dependencies are fully up. We check that by attempting
          # to resolve the DNS names of the dependency services - if they show up in DNS it means the services
          # have been associated with endpoints, which means the dependency pods passed their readiness checks
          #
        - name: 'wait-on-postgresql'
          image: '{{ .Values.c3Builder.busybox.registry }}/{{ .Values.c3Builder.busybox.repository }}:{{ .Values.c3Builder.busybox.tag }}'
          command: [ 'sh', '-c', 'until nslookup {{ template "c3Builder.postgresqlServiceName" . }}; do echo waiting on PostgreSQL service {{ template "c3Builder.postgresqlServiceName" . }} to become available ...; sleep 2; done' ]
        - name: 'wait-on-cassandra'
          image: '{{ .Values.c3Builder.busybox.registry }}/{{ .Values.c3Builder.busybox.repository }}:{{ .Values.c3Builder.busybox.tag }}'
          command: [ 'sh', '-c', 'until nslookup {{ template "c3Builder.cassandraServiceName" . }}; do echo waiting on Cassandra service {{ template "c3Builder.cassandraServiceName" . }} to become available ...; sleep 2; done' ]
        - name: 'wait-on-selenium-chrome'
          image: '{{ .Values.c3Builder.busybox.registry }}/{{ .Values.c3Builder.busybox.repository }}:{{ .Values.c3Builder.busybox.tag }}'
          command: [ 'sh', '-c', 'until nslookup {{ template "c3Builder.seleniumChromeServiceName" . }}; do echo waiting on Selenium Chrome service {{ template "c3Builder.seleniumChromeServiceName" . }} to become available ...; sleep 2; done' ]
        - name: 'wait-on-selenium-firefox'
          image: '{{ .Values.c3Builder.busybox.registry }}/{{ .Values.c3Builder.busybox.repository }}:{{ .Values.c3Builder.busybox.tag }}'
          command: [ 'sh', '-c', 'until nslookup {{ template "c3Builder.seleniumFirefoxServiceName" . }}; do echo waiting on Selenium Firefox service {{ template "c3Builder.seleniumFirefoxServiceName" . }} to become available ...; sleep 2; done' ]
      volumes:
      - name: 'users'
        hostPath:
          path: '{{ .Values.c3Builder.hostPasswdFile }}'
      - name: 'groups'
        hostPath:
          path: '{{ .Values.c3Builder.hostGroupFile }}'
      - name: 'maven-repo'
        hostPath:
          path: '{{ .Values.c3Builder.homeDir }}'
      - name: 'sources'
        hostPath:
          path: '{{ .Values.c3Builder.c3ServerRoot }}'
      {{- if .Values.c3Builder.sharedFileSystem.local }}
      - name: 'c3-cluster-shared'
        hostPath:
          path: '{{ .Values.c3Builder.sharedFileSystem.local }}'
      {{- end }}