GIT_EXCLUDED=${VAD_HOME}/gitexcluded

#JAVA HOME
export JAVA_HOME=/Library/Java/JavaVirtualMachines/amazon-corretto-11.jdkContents/Home

#SBT_OPTS
export SBT_OPTS="-Xms1024M -Xmx4G -Xss2M -XX:MaxMetaspaceSize=2G"

# Set max heap size
export VM_MAX_MEM=16G
export MAX_HEAP_SIZE=4G
export HEAP_NEWSIZE=5G
export JAVA_OPTS=-Xmx4096m

# Test Env Variables
export VAD_C3_TENANT=standAloneExMachina
export VAD_C3_TAG=test
export VAD_C3_HOST=c3server
export VAD_C3_PROJ_TAG=test
export VAD_UI_URL="http://localhost:10012"
export VAD_UI_IS_DEV=1
export VAD_FIXED_AUTH=true
export VAD_FILE_STORE=local
export C3_EXMAC_USER_ID="test.user@c3.ai"
export C3_EXMAC_PASSWORD="Password1"
export C3_EXMAC_API_URL="http://127.0.0.1:8080/api/1/standAloneExMachina/test"
export C3_EXMAC_URL="http://exmachina.local:8080"
export VAD_K8S_POD_LABEL=exmacstandaloneexmachinatesttestuserc3ai

# -------- Docker -------- #
CONTAINER_NAME="gitexcluded_server_1"
alias shealth="docker exec -it ${CONTAINER_NAME} c3-server health"

# -------- Ex Machina provisioning + setup commands -------- #
function prov() {
  c3 prov tag -t $1 -g test -u BA -p BA -E -F -a ${VAD_HOME}/repo
}

function sprov() {
  prov standAloneExMachina $1 && setupexmachina standAloneExMachina
}

function iprov() {
  prov integratedExMachina $1 && setupexmachina integratedExMachina
}

function setupexmachina() {
  c3 -u BA:BA -t $1 -g test -e http://localhost:8080 ${GIT_EXCLUDED}/setupExMachina.js
}

function downvad() {
  cd ${GIT_EXCLUDED}
  docker-compose down
  cd ..
}

function upvad() {
  cd ${GIT_EXCLUDED}
  docker-compose up -d
  copyCustomServerConfig
  waitForServerStartup
  cd ${VAD_HOME}/repo
  sprov
  cd ..
}

function resetvad() {
  downvad
  upvad
}

function copyCustomServerConfig() {
  CONTAINER_ID=$(docker ps -aqf "name=^$CONTAINER_NAME$")
  docker cp ${GIT_EXCLUDED}/server-config.xml.custom ${CONTAINER_ID}:/usr/local/share/c3/server/conf/
}

function waitForServerStartup() {
  READY=$(shealth)
  while [[ ${READY:0:1} -ne "1" ]]
  do
    sleep 3
    READY=$(shealth)
  done
}

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
