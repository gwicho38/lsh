#!/usr/bin/env bash
#
# Run Node.js CLI with JS client SDK loaded from local server.
#
# usage: v8 node [ -u,--url server ] [ -a,--auth user:password ] [ script ... ]
#
# The URL can also be set with the NODE_SERVER_URL environment variable.

CWD="`pwd`"
URL=${NODE_SERVER_URL-'http://localhost:8888/c3/c3'}
USER="BA:BA"
shift
if [[ "$1" == "-u" || "$1" == "--url" ]]; then
    URL="$2"
    shift 2
fi
if [[ "$1" == "-a" || "$1" == "--auth" || "$1" == "--user" ]]; then
    USER="$2"
    shift 2
fi
declare -a scripts
cli=true
while [ $# -gt 0 ]; do
    if [ ! -f "$1" ]; then
        echo "v8 node: Script file '$1' not found." >&2
        exit 1
    fi
    scripts+=('-r' "$1")
    cli=false
    shift
done

tmp="/tmp/c3-node$$"
rm -rf "$tmp"
mkdir "$tmp"
cd "$tmp"

curl -s -S "$URL/npm-modules/c3-remote.tgz" -u "$USER" > c3-remote.tgz
if [ $? -ne 0 ]; then
    echo "v8-node: Unable to download module; is a local server running?" >& 2
    exit 1
fi

npm install c3-remote.tgz >& npm.log
if [ $? -ne 0 ]; then
    cat npm.log
    exit 1
fi

auth="Basic `echo -n "$USER" | base64`"
cat > setup.js << EOF
require("@c3/remote");
const spec = { tier: 'FULL', interactive: $cli };
C3.connect("$URL", "$auth", undefined, spec).typeSystem().importTypes(global);
process.chdir("$CWD");
EOF

export NODE_PATH="$tmp:$CWD"
if [ "$cli" == true ]; then
    exec node -r setup.js
else
    exec node -r setup.js "${scripts[@]}" < /dev/null
fi
