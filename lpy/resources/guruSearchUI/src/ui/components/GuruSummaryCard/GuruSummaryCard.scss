@import '~@c3/ui/EnterpriseSearchVariables';
@import '~@c3/ui/EnterpriseSearchMixins';


$summary-card-loading-max-height: 200px;

.summary-card-error {
  border: $border-width $border-style var(--c3-style-dangerColor);
}

.content-error-header {
  font-size: $font-size-03;
  font-weight: $font-weight-regular;
  margin-top: var(--c3-style-spaceBlock02);
  margin-bottom: var(--c3-style-spaceBlock02);
  line-height: var(--c3-style-lineHeightSm);
  color: var(--c3-style-colorFgPrimary);
}

.summary-card {
  @include vertical-container;

  padding: $padding-secondary;
  background-color: $component-background-color;
  border-radius: $border-radius-large;
  box-shadow: $box-shadow-01;

  // Animate card on change of height (using max-height as the reference)
  transition: max-height 0.5s ease-in-out;
  // Set max height to max to force height animation, needs to
  // be big enough so that content does not overflow the container
  max-height: 1000vh;
  // Ensure text does not overflow on the card while this is animated
  overflow: hidden;

  &.loading {
    max-height: $summary-card-loading-max-height;
  }

  > .card-header {
    @include horizontal-container(center, space-between);

    max-width: 100%;
    margin-bottom: var(--c3-style-spaceBlock05);
    font-size: $font-size-03;

    > .card-header-summary {
      @include horizontal-container(center);
      position: relative;
      gap: calc($gap-secondary / 2);
      font-weight: var(--c3-style-font-weight-bold);
      font-size: $font-size-04;
      color: var(--c3-style-colorFgPrimary);

      .card-title-text {
        @include horizontal-container(center);
        font-weight: $font-weight-semibold;
        font-size: $font-size-04;
      }

      > i {
          color: var(--c3-style-colorFgSecondary);
      }
      & > .card-header-summary-tooltip {
          position: absolute;
          top: 30%;
          left: 210%;
          background-color: var(--c3-style-colorBgPrimary);
          border: 1px solid var(--c3-style-colorBorderWeak);
          color: var(--c3-style-colorFgPrimary);
          font-weight: $font-weight-regular;
          font-size: $font-size-02;
          box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
          padding: calc($padding-primary / 4) calc($padding-secondary / 2);
          border-radius: $border-radius-small;
          transform: translate(-50%, -50%);
          width: max-content;
          max-width: 256px;
          line-height: 125%;
          z-index: 100;
        }
      }

    > .card-header-feedback {
      @include horizontal-container;
      font-weight: $font-weight-medium
    }
  }
> .main-content {
    ::selection {
      background: #0e48c4;
    }
    > .content-header {
      font-size: $font-size-06;
      font-weight: $font-weight-semibold;
      margin-bottom: var(--c3-style-spaceBlock03);
      line-height: var(--c3-style-lineHeightMd);
      color: var(--c3-style-colorFgPrimary);

      .long-summary {
        font-size: $font-size-05;
        font-weight: $font-weight-medium;
      }

      .short-summary {
        font-size: $font-size-08;
      }
    }

    > .content-body {
      font-size: $font-size-03;
      font-weight: $font-weight-regular;
      padding-top: $padding-secondary;
      margin-bottom: var(--c3-style-spaceBlock05);
      line-height: var(--c3-style-lineHeightLg);
      color: var(--c3-style-colorFgPrimary);

      summary {
        cursor: pointer;
      }

      p {
        margin-top: calc($padding-secondary / 2);
      }
    }

    .dynamic-visualization {
      margin-bottom: $sdl-component-margin;

      .visualization-loader-container {
        background: transparent;
      }
    }

    > .separator {
      @include center-container;
      height: $border-width;
      width: 100%;
      background-color: var(--c3-style-colorDividerWeak, #fff);
      margin-bottom: $margin-secondary;
    }

    > .sub-content {
      width: 100%;
    }
  }

  .summary-card-loader-placeholder {
    @include styled-loader-placeholder($loader-placeholder-line-medium);
  }
}
