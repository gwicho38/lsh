/*
 * Copyright 2009-2024 C3.ai, Inc. (formerly C3IoT)  (www.c3.ai). All Rights Reserved.
 * This material, including without limitation any software, is the confidential trade secret
 * and proprietary information of C3.ai and its licensors. Reproduction, use and/or distribution
 * of this material in any form is strictly prohibited except as set forth in a written
 * license agreement with C3.ai and/or its authorized distributors.
 * This product may be covered by one or more U.S. patents or pending patent applications.
 */

/**
* A UI component type button.
*/
@typeScript
type GuruSummaryCard extends UiSdlComponent<BasicDataSpec> {

    /**
    * The {@link EngineLog} belonging to a particular {@link GenerativeAiResult}
    */
  engineLog: json

  /**
    * The title of the card
    */
  hideCardTitle: boolean

  /**
    * Whether or not to show the action group
    */
  hideRightActionGroup: boolean

  /**
    * The content of the header
    */
  contentHeader: UiSdlDynamicValueSpec

  /**
    * The content of the body
    */
  contentBody: UiSdlDynamicValueSpec

  /**
    * The {@link Genai.Query.Result} associated with the summary card
    */
  generativeAiResultId: !string

  /**
   * A visualization component generated from the {@link Genai.Query.Result}
   */
  visualizationDynamicComponent: json

  /**
    * Whether the {@link Genai.Query.Result} is loading
    */
  isDataLoading: boolean

  /**
   * Whether the {@link Genai.Query.Result} failed in the backend
   */
  failed: boolean

  /**
   * The sources of the summary card
   */
  sources: [Genai.Query.ResultToSourceFileRelation]

  /**
   * The interim statuses of the {@link Genai.Query.Result}
   */
  interimStatuses: [Genai.Query.Result.InterimStatus]

  /**
    * The sub content of the graph
    */
  subContent: UiSdlComponentRef<UiSdlComponent>

  /**
   * The number of sources to display in full
   */
  numDisplayed: int = 7

  /**
   * UI Settings dependent on the backend configuration
   */
  uiSettings: GenAiUiConfig


  /**
    * Extra className to be added to the React component
    */
  className: string

  /**
    * Triggered when the feedback button is clicked.
    *
    * @param id
    *            Id of the component
    * @param helpful
    *            True if feedback is positive, false if negative
    * @returns A `FEEDBACK_BUTTON_CLICK` action for this instance. Is either positive or negative.
    */
  @uiSdlActionCreator(actionType='FEEDBACK_BUTTON_CLICK')
  clickFeedbackButtonAction: private function(id: !string, helpful: !boolean, generativeAiResultId: !string, ownProps: any): !UiSdlButtonClickAction ts-client
}
