/*
 * Copyright 2009-2023 C3 AI (www.c3.ai). All Rights Reserved.
 * This material, including without limitation any software, is the confidential trade secret and proprietary
 * information of C3 and its licensors. Reproduction, use and/or distribution of this material in any form is
 * strictly prohibited except as set forth in a written license agreement with C3 and/or its authorized distributors.
 * This material may be covered by one or more patents or pending patent applications.
 */

/**
 * Util functions for the UI components of GuruSearch
 */
@typeScript
type GuruSearchComponentUtils {

  /**
   * This function is meant to partially replace UiSdlEnterpriseSearchComponentUtils.searchResultShouldRender()
   * Returns true if the component is ready to be rendered and the given api from the engine log is configured to display api source, and false otherwise.
   * For generativeAiResults that can be lazily loaded, we render each part of the answer as soon as it is available
   * For those that cannot be rendered, we also need to wait for the generativeAiResult to complete generation
   * @param isSpecificContentReady
   *           Condition indicating if the specific content rendered by the component is ready (ie, a visualization, answer, etc).
   * @param engineLog
   *           Specific engine log information used to extract the current api being used.
   * @param interimStatuses
   *           Array of {@link Genai.Query.Result.InterimStatusHistory} indicating the interim status of the generativeAiResult
   *           If some of them has the status 'Completed', then the generative AI result has completed generation
   * @param lazyLoadResults
   *           Boolean indicating if the generativeAiResults can be lazily loaded. 
   *           If true, the component will be rendered as soon as the specific content is ready
   *           If false, the component will be rendered only when the generativeAiResult has completed generation, and the specific content is ready
   * @returns a boolean indicating if the component is ready to be rendered
   */
  apiSourceShouldRender: function(isSpecificContentReady: !boolean, engineLog: any,
                         interimStatuses: [Genai.Query.Result.InterimStatusHistory],
                         lazyLoadResults: boolean ): !boolean ts-client
}
