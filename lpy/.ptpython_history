
# 2024-05-20 15:41:03.531039
+exit()

# 2024-05-20 16:44:46.950480
+clear()

# 2024-05-20 17:12:29.217525
+exit()

# 2024-06-15 23:19:43.989285
+import os

# 2024-06-15 23:19:47.926782
+import subprocess

# 2024-06-15 23:19:55.584665
+import signal

# 2024-06-15 23:19:58.944170
+import tensorflow

# 2024-06-15 23:20:38.116738
+import numpy

# 2024-06-15 23:20:49.347546
+import tensorflow as tf

# 2024-06-15 23:21:40.048231
+from tensorflow.keras.models import load_model

# 2024-06-15 23:21:48.520731
+import numpy as np

# 2024-06-15 23:24:34.348286
+    from tensorflow.keras.models import Sequential
+    from tensorflow.keras.layers import Dense
+    from sklearn.datasets import load_iris
+    from sklearn.model_selection import train_test_split
+    from sklearn.preprocessing import StandardScaler
+
+

# 2024-06-16 08:02:53.337510
+exit()

# 2024-06-16 14:15:02.324973
+import os

# 2024-06-16 14:15:04.579256
+import signal

# 2024-06-16 14:15:09.625236
+import tensorflow as tf

# 2024-06-16 14:15:19.393466
+import numpy as np

# 2024-06-16 14:18:59.038896
+exit()

# 2024-06-16 14:22:35.567080
+from keras.api.saving import load_model

# 2024-06-16 14:32:37.336452
+exit()

# 2024-06-16 14:37:28.723524
+from sklearn.datasets import load_iris

# 2024-06-16 14:44:20.334616
+from keras.src.layers.core.dense import Dense
+from keras.api.models import Sequential

# 2024-06-16 14:55:36.478483
+import click
+import os
+import subprocess
+import signal
+from typing import Any
+from keras.api.models import load_model
+from flask import Flask, request, jsonify
+import numpy as np
+import tensorflow as tf
+from keras.src.layers.core.dense import Dense
+from keras.api.models import Sequential
+
+

# 2024-06-16 14:55:49.028040
+__builtins__.clear()

# 2024-06-16 14:56:04.793131
+import click
+import os
+import subprocess
+import signal
+from typing import Any
+from keras.api.models import load_model
+from flask import Flask, request, jsonify
+import numpy as np
+import tensorflow as tf
+from keras.src.layers.core.dense import Dense
+from keras.api.models import Sequential

# 2024-06-16 14:57:40.922400
+from keras.src.layers.core.dense import Dense
+from keras.api.models import Sequential
+
+def create_model(input_shape):
+    model = Sequential([
+        Dense(64, activation='relu', input_shape=input_shape),
+        Dense(64, activation='relu'),
+        Dense(3, activation='softmax')
+    ])
+    return model

# 2024-06-16 15:02:29.369867
+model = create_model(4)

# 2024-06-16 15:02:48.027259
+from keras.api.models import Sequential

# 2024-06-16 15:02:50.575020
+model = create_model(4)

# 2024-06-16 15:03:01.847119
+from keras.src.layers.core.dense import Dense

# 2024-06-16 15:03:12.158866
+def create_model(input_shape):
+    model = Sequential([
+        Dense(64, activation='relu', input_shape=input_shape),
+        Dense(64, activation='relu'),
+        Dense(3, activation='softmax')
+    ])
+    return model

# 2024-06-16 15:03:17.311840
+model = create_model(4)

# 2024-06-16 15:03:28.772512
+Sequential

# 2024-06-16 15:04:35.659712
+model = Sequ

# 2024-06-16 15:07:38.301746
+import click
+import os
+import subprocess
+import signal
+from typing import Any
+from keras.api.models import load_model
+from flask import Flask, request, jsonify
+import numpy as np
+import tensorflow as tf
+from keras.src.layers.core.dense import Dense
+from keras.api.models import Sequential
+
+def create_model(input_shape):
+    model = Sequential([
+        Dense(64, activation='relu', input_shape=input_shape),
+        Dense(64, activation='relu'),
+        Dense(3, activation='softmax')
+    ])
+    return model

# 2024-06-16 15:07:45.284419
+create_model(4)

# 2024-06-16 15:08:31.506324
+exit()

# 2024-06-17 21:55:36.643095
+TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJhcHAiOiJna2V2OGMzYXBwcy1ibGl0enRlc3QtYXJ0aWZhY3RodWJzZXJ2aWNlIiwiaXNzIjoiYzMuYWkiLCJncm91cHMiOlsiQzMuQXBwQWRtaW4iXSwic2lkIjoxLCJhdWQiOiJjMy5haSIsImlkcCI6IiIsImMzZ3JvdXBzIjpbIkMzLkFwcEFkbWluIl0sImlkcGdyb3VwcyI6IntcIk9pZGNJZHBDb25maWc6OmdrZXY4YzNhcHBzLmMzLWUuY29tXCI6W1wiZ2tldjhjM2FwcHMuYzMtZS5jb20vQzMuU3R1ZGlvVXNlclwiXX0iLCJzc2lkeCI6IiIsIm5hbWUiOiIzMWNmNGZlZThjYWExYTZlMzAxYmQ3OTNkNTUzODUzYmM2NzYxM2RkY2Q5MjJiNWNkNTg1NzIwZDMyN2U2ZjEzIiwiYWN0aW9uaWQiOiI4MzQyLjU3ODU2MTU3MiIsImlkIjoiMzFjZjRmZWU4Y2FhMWE2ZTMwMWJkNzkzZDU1Mzg1M2JjNjc2MTNkZGNkOTIyYjVjZDU4NTcyMGQzMjdlNmYxMyIsImV4cCI6MTcxODc2MjA0NzAwMCwiZW1haWwiOiJsdWlzLmZlcm5hbmRlei1kZS1sYS12YXJhQGMzLmFpIn0.ZxMMXeB355zbAnJ-0VjZGVaUwrsIroa0fA05PU8XWzO95qVXdbsN4lwnBS8BshAOG8vTqPg-fm_49D_jDqKc3k7M89-uekENmLjy6-lwF1Mn2BQDIpOiybYR4NAHsmc-6pmcMlWAD3gKeDykwpeLjjHXYHPTtG_Lr21ND9Sy_0hFwPdNYrK6aavObA2wHc2rGYAFgHxcN8iOtdiAJgEYgwzeOTYnyX2WZ0Cnv3m10LZQX68HeD8iW01TF_BXioO-GHgKZECjRLHXHN5JkFJ4ZO9d-ScuUNn7odffJ8_lwZOer61FEd_yBNB3gztaQlUIcpcRIEKLGsR3Y_Pxj5X-Rw'
+
+def get_c3(url: str, tenant: str, tag: str, auth: str):
+    try:
+        from urllib.request import urlopen
+    except ImportError:
+        from urllib2 import urlopen
+    from types import ModuleType
+    c3iot = ModuleType('c3IoT')
+    c3iot.__loader__ = c3iot
+    src = urlopen(url + '/public/python/c3remote_bootstrap.py').read()
+    exec(src, c3iot.__dict__)
+    return c3iot.C3RemoteLoader.typeSys(url, tenant, tag, auth, define_types=True)
+
+
+
+

# 2024-06-17 21:56:07.227538
+ _c3 = get_c3('https://gkev8c3apps.c3-e.com', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 21:56:59.495548
+def get_c3(url: str, tenant: str, tag: str, auth: str):
+    # try:
+    #     from urllib.request import urlopen
+    # except ImportError:
+    #     from urllib2 import urlopen
+    from types import ModuleType
+    c3iot = ModuleType('c3IoT')
+    c3iot.__loader__ = c3iot
+    src = urlopen(url + '/public/python/c3remote_bootstrap.py').read()
+    exec(src, c3iot.__dict__)
+    return c3iot.C3RemoteLoader.typeSys(url, tenant, tag, auth, define_types=True)

# 2024-06-17 21:57:04.392252
+ _c3 = get_c3('https://gkev8c3apps.c3-e.com', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 21:58:30.560865
+import click
+from .api import write_content, delete_content
+from .watch import watch
+from urllib3.request import urlopen
+
+TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJhcHAiOiJna2V2OGMzYXBwcy1ibGl0enRlc3QtYXJ0aWZhY3RodWJzZXJ2aWNlIiwiaXNzIjoiYzMuYWkiLCJncm91cHMiOlsiQzMuQXBwQWRtaW4iXSwic2lkIjoxLCJhdWQiOiJjMy5haSIsImlkcCI6IiIsImMzZ3JvdXBzIjpbIkMzLkFwcEFkbWluIl0sImlkcGdyb3VwcyI6IntcIk9pZGNJZHBDb25maWc6OmdrZXY4YzNhcHBzLmMzLWUuY29tXCI6W1wiZ2tldjhjM2FwcHMuYzMtZS5jb20vQzMuU3R1ZGlvVXNlclwiXX0iLCJzc2lkeCI6IiIsIm5hbWUiOiIzMWNmNGZlZThjYWExYTZlMzAxYmQ3OTNkNTUzODUzYmM2NzYxM2RkY2Q5MjJiNWNkNTg1NzIwZDMyN2U2ZjEzIiwiYWN0aW9uaWQiOiI4MzQyLjU3ODU2MTU3MiIsImlkIjoiMzFjZjRmZWU4Y2FhMWE2ZTMwMWJkNzkzZDU1Mzg1M2JjNjc2MTNkZGNkOTIyYjVjZDU4NTcyMGQzMjdlNmYxMyIsImV4cCI6MTcxODc2MjA0NzAwMCwiZW1haWwiOiJsdWlzLmZlcm5hbmRlei1kZS1sYS12YXJhQGMzLmFpIn0.ZxMMXeB355zbAnJ-0VjZGVaUwrsIroa0fA05PU8XWzO95qVXdbsN4lwnBS8BshAOG8vTqPg-fm_49D_jDqKc3k7M89-uekENmLjy6-lwF1Mn2BQDIpOiybYR4NAHsmc-6pmcMlWAD3gKeDykwpeLjjHXYHPTtG_Lr21ND9Sy_0hFwPdNYrK6aavObA2wHc2rGYAFgHxcN8iOtdiAJgEYgwzeOTYnyX2WZ0Cnv3m10LZQX68HeD8iW01TF_BXioO-GHgKZECjRLHXHN5JkFJ4ZO9d-ScuUNn7odffJ8_lwZOer61FEd_yBNB3gztaQlUIcpcRIEKLGsR3Y_Pxj5X-Rw'
+
+def get_c3(url: str, tenant: str, tag: str, auth: str):
+    # try:
+    #     from urllib.request import urlopen
+    # except ImportError:
+    #     from urllib2 import urlopen
+    from types import ModuleType
+    c3iot = ModuleType('c3IoT')
+    c3iot.__loader__ = c3iot
+    src = urlopen(url + '/public/python/c3remote_bootstrap.py').read()
+    exec(src, c3iot.__dict__)
+    return c3iot.C3RemoteLoader.typeSys(url, tenant, tag, auth, define_types=True)

# 2024-06-17 21:58:41.200117
+from urllib3.request import urlopen
+
+TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJhcHAiOiJna2V2OGMzYXBwcy1ibGl0enRlc3QtYXJ0aWZhY3RodWJzZXJ2aWNlIiwiaXNzIjoiYzMuYWkiLCJncm91cHMiOlsiQzMuQXBwQWRtaW4iXSwic2lkIjoxLCJhdWQiOiJjMy5haSIsImlkcCI6IiIsImMzZ3JvdXBzIjpbIkMzLkFwcEFkbWluIl0sImlkcGdyb3VwcyI6IntcIk9pZGNJZHBDb25maWc6OmdrZXY4YzNhcHBzLmMzLWUuY29tXCI6W1wiZ2tldjhjM2FwcHMuYzMtZS5jb20vQzMuU3R1ZGlvVXNlclwiXX0iLCJzc2lkeCI6IiIsIm5hbWUiOiIzMWNmNGZlZThjYWExYTZlMzAxYmQ3OTNkNTUzODUzYmM2NzYxM2RkY2Q5MjJiNWNkNTg1NzIwZDMyN2U2ZjEzIiwiYWN0aW9uaWQiOiI4MzQyLjU3ODU2MTU3MiIsImlkIjoiMzFjZjRmZWU4Y2FhMWE2ZTMwMWJkNzkzZDU1Mzg1M2JjNjc2MTNkZGNkOTIyYjVjZDU4NTcyMGQzMjdlNmYxMyIsImV4cCI6MTcxODc2MjA0NzAwMCwiZW1haWwiOiJsdWlzLmZlcm5hbmRlei1kZS1sYS12YXJhQGMzLmFpIn0.ZxMMXeB355zbAnJ-0VjZGVaUwrsIroa0fA05PU8XWzO95qVXdbsN4lwnBS8BshAOG8vTqPg-fm_49D_jDqKc3k7M89-uekENmLjy6-lwF1Mn2BQDIpOiybYR4NAHsmc-6pmcMlWAD3gKeDykwpeLjjHXYHPTtG_Lr21ND9Sy_0hFwPdNYrK6aavObA2wHc2rGYAFgHxcN8iOtdiAJgEYgwzeOTYnyX2WZ0Cnv3m10LZQX68HeD8iW01TF_BXioO-GHgKZECjRLHXHN5JkFJ4ZO9d-ScuUNn7odffJ8_lwZOer61FEd_yBNB3gztaQlUIcpcRIEKLGsR3Y_Pxj5X-Rw'
+
+def get_c3(url: str, tenant: str, tag: str, auth: str):
+    # try:
+    #     from urllib.request import urlopen
+    # except ImportError:
+    #     from urllib2 import urlopen
+    from types import ModuleType
+    c3iot = ModuleType('c3IoT')
+    c3iot.__loader__ = c3iot
+    src = urlopen(url + '/public/python/c3remote_bootstrap.py').read()
+    exec(src, c3iot.__dict__)
+    return c3iot.C3RemoteLoader.typeSys(url, tenant, tag, auth, define_types=True)

# 2024-06-17 21:58:47.330131
+exit()

# 2024-06-17 22:02:16.028655
+from urllib.request import urlopen

# 2024-06-17 22:02:30.624326
+def get_c3(url: str, tenant: str, tag: str, auth: str):
+    # try:
+    #     from urllib.request import urlopen
+    # except ImportError:
+    #     from urllib2 import urlopen
+    from types import ModuleType
+    c3iot = ModuleType('c3IoT')
+    c3iot.__loader__ = c3iot
+    src = urlopen(url + '/public/python/c3remote_bootstrap.py').read()
+    exec(src, c3iot.__dict__)
+    return c3iot.C3RemoteLoader.typeSys(url, tenant, tag, auth, define_types=True)

# 2024-06-17 22:02:42.372134
+TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJhcHAiOiJna2V2OGMzYXBwcy1ibGl0enRlc3QtYXJ0aWZhY3RodWJzZXJ2aWNlIiwiaXNzIjoiYzMuYWkiLCJncm91cHMiOlsiQzMuQXBwQWRtaW4iXSwic2lkIjoxLCJhdWQiOiJjMy5haSIsImlkcCI6IiIsImMzZ3JvdXBzIjpbIkMzLkFwcEFkbWluIl0sImlkcGdyb3VwcyI6IntcIk9pZGNJZHBDb25maWc6OmdrZXY4YzNhcHBzLmMzLWUuY29tXCI6W1wiZ2tldjhjM2FwcHMuYzMtZS5jb20vQzMuU3R1ZGlvVXNlclwiXX0iLCJzc2lkeCI6IiIsIm5hbWUiOiIzMWNmNGZlZThjYWExYTZlMzAxYmQ3OTNkNTUzODUzYmM2NzYxM2RkY2Q5MjJiNWNkNTg1NzIwZDMyN2U2ZjEzIiwiYWN0aW9uaWQiOiI4MzQyLjU3ODU2MTU3MiIsImlkIjoiMzFjZjRmZWU4Y2FhMWE2ZTMwMWJkNzkzZDU1Mzg1M2JjNjc2MTNkZGNkOTIyYjVjZDU4NTcyMGQzMjdlNmYxMyIsImV4cCI6MTcxODc2MjA0NzAwMCwiZW1haWwiOiJsdWlzLmZlcm5hbmRlei1kZS1sYS12YXJhQGMzLmFpIn0.ZxMMXeB355zbAnJ-0VjZGVaUwrsIroa0fA05PU8XWzO95qVXdbsN4lwnBS8BshAOG8vTqPg-fm_49D_jDqKc3k7M89-uekENmLjy6-lwF1Mn2BQDIpOiybYR4NAHsmc-6pmcMlWAD3gKeDykwpeLjjHXYHPTtG_Lr21ND9Sy_0hFwPdNYrK6aavObA2wHc2rGYAFgHxcN8iOtdiAJgEYgwzeOTYnyX2WZ0Cnv3m10LZQX68HeD8iW01TF_BXioO-GHgKZECjRLHXHN5JkFJ4ZO9d-ScuUNn7odffJ8_lwZOer61FEd_yBNB3gztaQlUIcpcRIEKLGsR3Y_Pxj5X-Rw'

# 2024-06-17 22:02:50.250922
+_c3 = get_c3('https://gkev8c3apps.c3-e.com', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 22:03:09.908048
+from urllib.request import urlopen

# 2024-06-17 22:03:11.937819
+_c3 = get_c3('https://gkev8c3apps.c3-e.com', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 22:03:43.496924
+exit()

# 2024-06-17 22:05:21.495373
+def get_c3(url: str, tenant: str, tag: str, auth: str):
+    try:
+        from urllib.request import urlopen
+    except ImportError:
+        from urllib2 import urlopen
+    from types import ModuleType
+    c3iot = ModuleType('c3IoT')
+    c3iot.__loader__ = c3iot
+    src = urlopen(url + '/public/python/c3remote_bootstrap.py').read()
+    exec(src, c3iot.__dict__)
+    return c3iot.C3RemoteLoader.typeSys(url, tenant, tag, auth, define_types=True)

# 2024-06-17 22:05:31.052484
+_c3 = get_c3('https://gkev8c3apps.c3-e.com', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 22:05:47.008636
+TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJhcHAiOiJna2V2OGMzYXBwcy1ibGl0enRlc3QtYXJ0aWZhY3RodWJzZXJ2aWNlIiwiaXNzIjoiYzMuYWkiLCJncm91cHMiOlsiQzMuQXBwQWRtaW4iXSwic2lkIjoxLCJhdWQiOiJjMy5haSIsImlkcCI6IiIsImMzZ3JvdXBzIjpbIkMzLkFwcEFkbWluIl0sImlkcGdyb3VwcyI6IntcIk9pZGNJZHBDb25maWc6OmdrZXY4YzNhcHBzLmMzLWUuY29tXCI6W1wiZ2tldjhjM2FwcHMuYzMtZS5jb20vQzMuU3R1ZGlvVXNlclwiXX0iLCJzc2lkeCI6IiIsIm5hbWUiOiIzMWNmNGZlZThjYWExYTZlMzAxYmQ3OTNkNTUzODUzYmM2NzYxM2RkY2Q5MjJiNWNkNTg1NzIwZDMyN2U2ZjEzIiwiYWN0aW9uaWQiOiI4MzQyLjU3ODU2MTU3MiIsImlkIjoiMzFjZjRmZWU4Y2FhMWE2ZTMwMWJkNzkzZDU1Mzg1M2JjNjc2MTNkZGNkOTIyYjVjZDU4NTcyMGQzMjdlNmYxMyIsImV4cCI6MTcxODc2MjA0NzAwMCwiZW1haWwiOiJsdWlzLmZlcm5hbmRlei1kZS1sYS12YXJhQGMzLmFpIn0.ZxMMXeB355zbAnJ-0VjZGVaUwrsIroa0fA05PU8XWzO95qVXdbsN4lwnBS8BshAOG8vTqPg-fm_49D_jDqKc3k7M89-uekENmLjy6-lwF1Mn2BQDIpOiybYR4NAHsmc-6pmcMlWAD3gKeDykwpeLjjHXYHPTtG_Lr21ND9Sy_0hFwPdNYrK6aavObA2wHc2rGYAFgHxcN8iOtdiAJgEYgwzeOTYnyX2WZ0Cnv3m10LZQX68HeD8iW01TF_BXioO-GHgKZECjRLHXHN5JkFJ4ZO9d-ScuUNn7odffJ8_lwZOer61FEd_yBNB3gztaQlUIcpcRIEKLGsR3Y_Pxj5X-Rw'

# 2024-06-17 22:05:49.926197
+_c3 = get_c3('https://gkev8c3apps.c3-e.com', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 22:06:49.220863
+exit()

# 2024-06-17 22:07:05.646935
+TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJhcHAiOiJna2V2OGMzYXBwcy1ibGl0enRlc3QtYXJ0aWZhY3RodWJzZXJ2aWNlIiwiaXNzIjoiYzMuYWkiLCJncm91cHMiOlsiQzMuQXBwQWRtaW4iXSwic2lkIjoxLCJhdWQiOiJjMy5haSIsImlkcCI6IiIsImMzZ3JvdXBzIjpbIkMzLkFwcEFkbWluIl0sImlkcGdyb3VwcyI6IntcIk9pZGNJZHBDb25maWc6OmdrZXY4YzNhcHBzLmMzLWUuY29tXCI6W1wiZ2tldjhjM2FwcHMuYzMtZS5jb20vQzMuU3R1ZGlvVXNlclwiXX0iLCJzc2lkeCI6IiIsIm5hbWUiOiIzMWNmNGZlZThjYWExYTZlMzAxYmQ3OTNkNTUzODUzYmM2NzYxM2RkY2Q5MjJiNWNkNTg1NzIwZDMyN2U2ZjEzIiwiYWN0aW9uaWQiOiI4MzQyLjU3ODU2MTU3MiIsImlkIjoiMzFjZjRmZWU4Y2FhMWE2ZTMwMWJkNzkzZDU1Mzg1M2JjNjc2MTNkZGNkOTIyYjVjZDU4NTcyMGQzMjdlNmYxMyIsImV4cCI6MTcxODc2MjA0NzAwMCwiZW1haWwiOiJsdWlzLmZlcm5hbmRlei1kZS1sYS12YXJhQGMzLmFpIn0.ZxMMXeB355zbAnJ-0VjZGVaUwrsIroa0fA05PU8XWzO95qVXdbsN4lwnBS8BshAOG8vTqPg-fm_49D_jDqKc3k7M89-uekENmLjy6-lwF1Mn2BQDIpOiybYR4NAHsmc-6pmcMlWAD3gKeDykwpeLjjHXYHPTtG_Lr21ND9Sy_0hFwPdNYrK6aavObA2wHc2rGYAFgHxcN8iOtdiAJgEYgwzeOTYnyX2WZ0Cnv3m10LZQX68HeD8iW01TF_BXioO-GHgKZECjRLHXHN5JkFJ4ZO9d-ScuUNn7odffJ8_lwZOer61FEd_yBNB3gztaQlUIcpcRIEKLGsR3Y_Pxj5X-Rw'
+
+def get_c3(url: str, tenant: str, tag: str, auth: str):
+    try:
+        from urllib.request import urlopen
+    except ImportError:
+        from urllib2 import urlopen
+    from types import ModuleType
+    c3iot = ModuleType('c3IoT')
+    c3iot.__loader__ = c3iot
+    src = urlopen(url + '/remote/c3.py').read()
+    exec(src, c3iot.__dict__)
+    return c3iot.C3RemoteLoader.typeSys(url, tenant, tag, auth, define_types=True)

# 2024-06-17 22:07:12.784504
+ _c3 = get_c3('https://gkev8c3apps.c3-e.com', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 22:08:20.415762
+    _c3 = get_c3('https://gkev8c3apps.c3-e.com/blitztest/artifacthubservice', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 22:08:48.715551
+def get_c3(url: str, tenant: str, tag: str, auth: str):
+    try:
+        from urllib.request import urlopen
+    except ImportError:
+        from urllib2 import urlopen
+    from types import ModuleType
+    c3iot = ModuleType('c3IoT')
+    c3iot.__loader__ = c3iot
+    src = urlopen(url + '/remote/c3.py').read()
+    exec_scope = {}
+    exec(src, exec_scope)
+    return exec_scope["get_c3"]()

# 2024-06-17 22:08:52.269567
+    _c3 = get_c3('https://gkev8c3apps.c3-e.com/blitztest/artifacthubservice', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 22:11:57.519939
+def get_c3(url: str, tenant: str, tag: str, auth: str):
+    from urllib.request import urlopen
+    src = urlopen(url + '/remote/c3.py').read()
+    exec_scope = {}
+    exec(src, exec_scope)  # pylint: disable=exec-used
+    return exec_scope["get_c3"](url=url, authz=auth)

# 2024-06-17 22:12:11.678794
+    _c3 = get_c3('https://gkev8c3apps.c3-e.com/blitztest/artifacthubservice', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 22:19:56.259207
+    package_name = 'guruSearchUI'
+    sem_ver = '8.3.2+develop.135.c0d8a7ee8c8cb63810800e93f544275105ab580c'
+    print(_c3.ArtifactHubService.Artifact.fetch().first())

# 2024-06-17 22:21:21.571639
+TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJhcHAiOiJna2V2OGMzYXBwcy1ibGl0enRlc3QtYXJ0aWZhY3RodWJzZXJ2aWNlIiwiaXNzIjoiYzMuYWkiLCJncm91cHMiOlsiQzMuQXBwQWRtaW4iXSwic2lkIjoxLCJhdWQiOiJjMy5haSIsImlkcCI6IiIsImMzZ3JvdXBzIjpbIkMzLkFwcEFkbWluIl0sImlkcGdyb3VwcyI6IntcIk9pZGNJZHBDb25maWc6OmdrZXY4YzNhcHBzLmMzLWUuY29tXCI6W1wiZ2tldjhjM2FwcHMuYzMtZS5jb20vQzMuU3R1ZGlvVXNlclwiXX0iLCJzc2lkeCI6IiIsIm5hbWUiOiIzMWNmNGZlZThjYWExYTZlMzAxYmQ3OTNkNTUzODUzYmM2NzYxM2RkY2Q5MjJiNWNkNTg1NzIwZDMyN2U2ZjEzIiwiYWN0aW9uaWQiOiI4MzQyLjU3ODU2MTU3MiIsImlkIjoiMzFjZjRmZWU4Y2FhMWE2ZTMwMWJkNzkzZDU1Mzg1M2JjNjc2MTNkZGNkOTIyYjVjZDU4NTcyMGQzMjdlNmYxMyIsImV4cCI6MTcxODc2MjA0NzAwMCwiZW1haWwiOiJsdWlzLmZlcm5hbmRlei1kZS1sYS12YXJhQGMzLmFpIn0.ZxMMXeB355zbAnJ-0VjZGVaUwrsIroa0fA05PU8XWzO95qVXdbsN4lwnBS8BshAOG8vTqPg-fm_49D_jDqKc3k7M89-uekENmLjy6-lwF1Mn2BQDIpOiybYR4NAHsmc-6pmcMlWAD3gKeDykwpeLjjHXYHPTtG_Lr21ND9Sy_0hFwPdNYrK6aavObA2wHc2rGYAFgHxcN8iOtdiAJgEYgwzeOTYnyX2WZ0Cnv3m10LZQX68HeD8iW01TF_BXioO-GHgKZECjRLHXHN5JkFJ4ZO9d-ScuUNn7odffJ8_lwZOer61FEd_yBNB3gztaQlUIcpcRIEKLGsR3Y_Pxj5X-Rw'
+
+def get_c3(url: str, tenant: str, tag: str, auth: str):
+    from urllib.request import urlopen
+    src = urlopen(url + '/remote/c3.py').read()
+    exec_scope = {}
+    exec(src, exec_scope)  # pylint: disable=exec-used
+    return exec_scope["get_c3"](url=url, authz=auth)

# 2024-06-17 22:21:34.286635
+    _c3 = get_c3('https://gkev8c3apps.c3-e.com/blitztest/artifacthubservice', 'blitztest', 'artifacthubservice', TOKEN)

# 2024-06-17 22:21:45.660297
+    package_name = 'guruSearchUI'
+    sem_ver = '8.3.2+develop.135.c0d8a7ee8c8cb63810800e93f544275105ab580c'

# 2024-06-17 22:23:52.546433
+_c3.ArtifactHubService.fetch(spec={"filter": _c3.Filter.inst().eq("name", package_name), "order": "descending(meta.updated)", "limit": 3})

# 2024-06-17 22:24:50.008898
+_c3.ArtifactHubService.Artifact.fetch(spec={"filter": _c3.Filter.inst().eq("name", package_name), "order": "descending(meta.updated)", "limit": 3})

# 2024-06-17 22:27:32.121806
+    package_name = 'guruSearchUI'
+    sem_ver = '8.3.2+develop.135.c0d8a7ee8c8cb63810800e93f544275105ab580c'
+    target_build = _c3.ArtifactHubService.Artifact.fetch(spec={"filter": _c3.Filter.inst().eq("name", package_name), "order": "descending(meta.updated)", "limit": 1})

# 2024-06-17 22:27:36.446032
+target_build

# 2024-06-17 22:27:53.957714
+    package_name = 'guruSearchUI'
+    sem_ver = '8.3.2+develop.135.c0d8a7ee8c8cb63810800e93f544275105ab580c'
+    target_build = _c3.ArtifactHubService.Artifact.fetch(spec={"filter": _c3.Filter.inst().eq("name", package_name), "order": "descending(meta.updated)", "limit": 1}).objs[0]

# 2024-06-17 22:27:56.470792
+target_build

# 2024-06-17 22:28:15.378226
+    target_build = _c3.ArtifactHubService.Artifact.fetch(spec={"filter": _c3.Filter.inst().eq("name", package_name), "order": "descending(meta.updated)", "limit": 1}).objs[0].get("this")

# 2024-06-17 22:28:18.473820
+target

# 2024-06-17 22:28:21.060392
+target_build

# 2024-06-17 22:29:41.286777
+_c3.Filter.inst().eq("name", package_name)

# 2024-06-17 22:30:45.766715
+_c3.Filter.inst().eq("name", package_name).eq("semanticVersion", '8.3.2+develop.135.c0d8a7ee8c8cb63810800e93f544275105ab580c')

# 2024-06-17 22:34:26.765690
+f = _c3.Filter.inst().eq("name", package_name)

# 2024-06-17 22:38:23.684971
+filter = "name == \"guruSearchUI\""

# 2024-06-17 22:39:00.717029
+ target_build = _c3.ArtifactHubService.Artifact.fetch(spec={"filter": filter, "order": "descending(meta.updated)", "limit": 1}).objs[0].get("this")

# 2024-06-17 22:39:03.320276
+target

# 2024-06-17 22:39:05.475095
+target_build

# 2024-06-17 22:40:36.636239
+filter = f"name == \"guruSearchUI\" && semanticVersion == \"8.3.2+develop.135.c0d8a7ee8c8cb63810800e93f544275105ab580c\""

# 2024-06-17 22:40:41.240213
+ target_build = _c3.ArtifactHubService.Artifact.fetch(spec={"filter": filter, "order": "descending(meta.updated)", "limit": 1}).objs[0].get("this")

# 2024-06-17 22:40:44.518026
+target_build

# 2024-06-17 22:42:30.408676
+    package_name = 'guruSearchUI'
+    sem_ver = '8.3.2+develop.135.c0d8a7ee8c8cb63810800e93f544275105ab580c'
+    _filter = f"name == \"guruSearchUI\" && semanticVersion == \"8.3.2+develop.135.c0d8a7ee8c8cb63810800e93f544275105ab580c\""
+    target_build = _c3.ArtifactHubService.Artifact.fetch(spec={"filter": _filter, "order": "descending(meta.updated)", "limit": 1}).objs[0].get("this")
+    print(target_build)

# 2024-06-17 22:46:52.536189
+    content_location = _c3.ArtifactHubService.make(artifact_id).get().content.contentLocation
+    file_url = C3File.make(content_location).apiEndpoint("GET", True)
+    download_name = f"{artifact['name']}{artifact['semanticVersion']}.zip"
+
+    # Download the file
+    response = requests.get(file_url, stream=True)
+    with open(download_name, 'wb') as file:
+        shutil.copyfileobj(response.raw, file)
+    del response
+
+    print(f"Downloaded {download_name}")

# 2024-06-17 22:47:36.402539
+    content_location = _c3.ArtifactHubService.make(target_build.id).get().content.contentLocation
+    file_url = C3File.make(content_location).apiEndpoint("GET", True)
+    download_name = f"{artifact['name']}{artifact['semanticVersion']}.zip"
+
+    # Download the file
+    response = requests.get(file_url, stream=True)
+    with open(download_name, 'wb') as file:
+        shutil.copyfileobj(response.raw, file)
+    del response
+
+    print(f"Downloaded {download_name}")

# 2024-06-17 22:49:05.291820
+    content_location = _c3.ArtifactHubService.make(str(artifact_id)).get().content.contentLocation
+    file_url = C3File.make(content_location).apiEndpoint("GET", True)
+    download_name = f"{artifact['name']}{artifact['semanticVersion']}.zip"
+
+    # Download the file
+    response = requests.get(file_url, stream=True)
+    with open(download_name, 'wb') as file:
+        shutil.copyfileobj(response.raw, file)
+    del response
+
+    print(f"Downloaded {download_name}")

# 2024-06-17 22:49:39.034615
+    content_location = _c3.ArtifactHubService.make(str(target_build)).get().content.contentLocation
+    file_url = C3File.make(content_location).apiEndpoint("GET", True)
+    download_name = f"{artifact['name']}{artifact['semanticVersion']}.zip"
+
+    # Download the file
+    response = requests.get(file_url, stream=True)
+    with open(download_name, 'wb') as file:
+        shutil.copyfileobj(response.raw, file)
+    del response
+
+    print(f"Downloaded {download_name}")

# 2024-06-17 22:50:55.063814
+    _c3 = get_c3('https://gkev8c3apps.c3-e.com/blitztest/artifacthubservice', 'blitztest', 'artifacthubservice', TOKEN)
+    package_name = 'guruSearchUI'
+    sem_ver = '8.3.2+develop.135.c0d8a7ee8c8cb63810800e93f544275105ab580c'
+    _filter = f"name == \"guruSearchUI\" && semanticVersion == \"8.3.2+develop.135.c0d8a7ee8c8cb63810800e93f544275105ab580c\""
+    target_build = _c3.ArtifactHubService.Artifact.fetch(spec={"filter": _filter, "order": "descending(meta.updated)", "limit": 1}).objs[0].get("this")
+    print(target_build)
+    content_location = _c3.ArtifactHubService(target_build.id).get("this").content
+    print(content_location)

# 2024-06-17 22:52:00.812301
+target_build.id

# 2024-06-17 22:52:44.109005
+_c3.ArtifactHubService.Artifact(target_build.id).get()

# 2024-06-17 22:52:57.787197
+_c3.ArtifactHubService.Artifact.make(target_build.id).get()

# 2024-06-17 22:53:18.698174
+_c3.ArtifactHubService.Artifact.make(target_build.id).get().content

# 2024-06-17 22:53:41.774803
+_c3.ArtifactHubService.Artifact.make(target_build.id).get().content.contentLocation

# 2024-06-17 22:53:51.839365
+_c3.ArtifactHubService.Artifact.make(target_build.id).get()

# 2024-06-17 22:54:41.547649
+_c3.ArtifactHubService.Artifact.make(target_build.id).get().getMissing("content.contentLocation").content.contentLocation

# 2024-06-17 22:57:39.770728
+artifact = _c3.ArtifactHub.artifactForVersion(package_name, sem_ver)

# 2024-06-17 22:57:44.300004
+artifact

# 2024-06-17 22:58:50.900805
+ _c3.ArtifactHubService.Artifact.make(artifact.id).get().content.contentLocation

# 2024-06-17 22:59:24.270680
+ artifact.getMissing(spec="content.contentLocation").content.contentLocation

# 2024-06-17 22:59:39.409688
+ artifact.get().content.contentLocation
